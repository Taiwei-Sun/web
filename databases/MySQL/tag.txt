mysql
use Sunny
select * from Logdata;
show tables;
delete from Sunny.LogData where date_time>'2017-04-23 03:16:01';
select * from Sunny.LogData where date_time>'2017-04-23 03:16:01';
echo 'select * from Sunny.LogData;' | mysql -p

DelTime=head -1 messages20170314 |awk '{print $1 " " $2 " " $3}'
echo 'select * from Sunny.LogFileDetail;'  | mysql -p
drop table Sunny.LogFileDetail;
create table Sunny.LogFileDetail(
id Integer NOT NULL auto_increment primary key,
log_file_date varchar(16),
last_position Integer
);
describe Sunny.LogFileDetail;
create table Sunny.User(
id Integer NOT NULL auto_increment primary key,
name varchar(255),
paw varchar(41),
creator varchar(255),
create_time TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
5554113
insert into Sunny.LogFileDetail(id,log_file_date,last_position)
values('1','Mar 12 03:45:01','5554113');

show databases;

mysql -u username -p database_name < file.sql

mysql> use db_name;
mysql> source backup-file.sql;

mysql -V


Follow the steps below.

Start the MySQL server instance or daemon with the --skip-grant-tables option (security setting).
$ mysqld --skip-grant-tables
Execute these statements.
$ mysql -u root mysql
$mysql> UPDATE user SET Password=PASSWORD('my_password') where USER='root';
$mysql> FLUSH PRIVILEGES;
If you face the unknown field Password error above use:

update user set authentication_string=password('my_password') where user='root';
Finally, restart the instance/daemon without the --skip-grant-tables option.
$ /etc/init.d/mysql restart
You should now be able to connect with your new password.

$ mysql -u root -p
Enter password: my_password

Fix for MySQL “Unable to lock ibdata1” error

sudo mv /usr/local/mysql/data/ibdata1 /usr/local/mysql/data/ibdata1.bak
sudo mv /usr/local/mysql/data/ib_logfile0 /usr/local/mysql/data/ib_logfile0.bak
sudo mv /usr/local/mysql/data/ib_logfile1 /usr/local/mysql/data/ib_logfile1.bak
sudo cp -a /usr/local/mysql/data/ibdata1.bak /usr/local/mysql/data/ibdata1
sudo cp -a /usr/local/mysql/data/ib_logfile0.bak /usr/local/mysql/data/ib_logfile0
sudo cp -a /usr/local/mysql/data/ib_logfile1.bak /usr/local/mysql/data/ib_logfile1
sudo /etc/init.d/mysql restart






To give the user access to the database from any host, type the following command:

grant select on database_name.* to 'read-only_user_name'@'%' identified by 'password';

If the collector will be installed on the same host as the database, type the following command:

grant select on database_name.* to 'read-only_user_name' identified by 'password';

This command gives the user read-only access to the database from the local host only.

If you know the host name or IP address of the host that the collector is will be installed on, type the following command:

grant select on database_name.* to 'read-only_user_name'@'host_name or IP_address' identified by 'password';

The host name must be resolvable by DNS or by the local hosts file.




CREATE USER 'mysqlAD'@'localhost' IDENTIFIED BY 'mysqlAD123';
GRANT ALL PRIVILEGES ON netdb.* TO 'mysqlAD'@'localhost' WITH GRANT OPTION;

CREATE USER 'mysqlAD'@'%' IDENTIFIED BY 'mysqlAD123';
GRANT ALL PRIVILEGES ON *.* TO 'mysqlAD'@'%' WITH GRANT OPTION;

CREATE USER 'admin'@'localhost';
GRANT RELOAD,PROCESS ON *.* TO 'admin'@'localhost';
CREATE USER 'dummy'@'localhost';
FLUSH PRIVILEGES;